@page "/login"
@using BlazorClient.Protos
@using System.ComponentModel.DataAnnotations
@inject IJSRuntime JS
@inject NavigationManager Navigation
@inject AuthService.AuthServiceClient AuthServiceClient

<h3>Logowanie</h3>

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="loginModel.Email" />
        <ValidationMessage For="@(() => loginModel.Email)" />
    </div>

    <div class="form-group">
        <label for="password">Hasło</label>
        <InputText type="password" id="password" class="form-control" @bind-Value="loginModel.Password" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Zaloguj</button>
    </div>

    @if (errorMessage != null)
    {
        <div class="alert alert-danger">
            @errorMessage
        </div>
    }
</EditForm>

<p>Nie masz konta? <NavLink href="/register">Zarejestruj się</NavLink></p>

@code {
    private LoginModel loginModel = new LoginModel();
    private string errorMessage;

    public sealed class LoginModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";
    }

    private async Task HandleLogin()
    {
        try
        {
            var reply = await AuthServiceClient.LoginAsync(new LoginRequest { Email = loginModel.Email, Password = loginModel.Password });

            
            await JS.InvokeVoidAsync("localStorage.setItem", "access_token", reply.Token);

            
            Navigation.NavigateTo("/");
        }
        catch (Exception ex)
        {
            errorMessage = "Błąd logowania: " + ex.Message;
        }
    }
}
