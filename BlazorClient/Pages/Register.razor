@page "/register"
@using BlazorClient.Protos
@using System.ComponentModel.DataAnnotations
@inject IJSRuntime JS
@inject NavigationManager Navigation
@inject AuthService.AuthServiceClient AuthServiceClient

<h3>Rejestracja</h3>

<EditForm Model="@registerModel" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="registerModel.Email" />
        <ValidationMessage For="@(() => registerModel.Email)" />
    </div>

    <div class="form-group">
        <label for="password">Hasło</label>
        <InputText type="password" id="password" class="form-control" @bind-Value="registerModel.Password" />
        <ValidationMessage For="@(() => registerModel.Password)" />
    </div>

    <div class="form-group">
        <label for="confirmPassword">Potwierdź Hasło</label>
        <InputText type="password" id="confirmPassword" class="form-control" @bind-Value="registerModel.ConfirmPassword" />
        <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Zarejestruj</button>
    </div>

    @if (errorMessage != null)
    {
        <div class="alert alert-danger">
            @errorMessage
        </div>
    }
</EditForm>

<p>Masz już konto? <NavLink href="/login">Zaloguj się</NavLink></p>

@code {
    private RegisterModel registerModel = new RegisterModel();
    private string errorMessage;

    public class RegisterModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";
        [Required]
        [DataType(DataType.Password)]
        public string ConfirmPassword { get; set; } = "";
    }

    private async Task HandleRegister()
    {
        try
        {
            var reply = await AuthServiceClient.RegisterAsync(new RegisterRequest
            {
                Email = registerModel.Email,
                Password = registerModel.Password,
                ConfirmPassword = registerModel.ConfirmPassword
            });

            Navigation.NavigateTo("/login");
        }
        catch (Exception ex)
        {
            errorMessage = "Błąd rejestracji: " + ex.Message;
        }
    }
}
